#!/bin/sh

mode=$1
shift >/dev/null 2>&1

if [[ $mode == "build" || $mode == "b" ]]; then
    echo -e 'running the following command:\n\t$ podman build -t squid-game .\n'
    podman build -t squid-game .

elif [[ $mode == "pull" || $mode == "p" ]]; then
    echo -e "running the following command:\
\t$ podman run -it --rm --name squid-game squid-game -c \"sleep 9\" >/dev/null 2>&1\
\t$ podman cp squid-game:/go/src/lab-2-squid-game/squid-bin ./"

    $(podman run -it --rm --name squid-game squid-game -c "sleep 9" >/dev/null 2>&1 &)
    podman cp squid-game:/go/src/lab-2-squid-game/squid-bin ./

elif [[ $mode == "execute" || $mode == "exe" || $mode == "e" ]]; then
    echo -e "running the following command:\n\t$ podman run -it --rm --name squid-game squid-game -c \"$@\"\n"
    podman run -it --rm --name squid-game squid-game -c "$@"

elif [[ $mode == "compile" || $mode == "com" || $mode == "c" ]]; then
    echo -e "building proto files\n"
    protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative --experimental_allow_proto3_optional $(find ./ -name "*.proto")

elif [[ $mode == "remove" || $mode == "rm" || $mode == "r" ]]; then
    echo -e "cleaning\n"
    rm -vf protogrpc/*.pb.go
    rm -vf squid-bin

else
    echo -e 'usage: ./squid-cli b[uild]              # build image'
    echo -e '  or:  ./squid-cli p[ull]               # copy the binary'
    echo -e '  or:  ./squid-cli e[xecute] [ARGS...]  # run commands in shell'
    echo -e '  or:  ./squid-cli c[ompile]            # build proto files'
    echo -e '  or:  ./squid-cli r[emove]             # remove binary and compiled proto files'
fi
